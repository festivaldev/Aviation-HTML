| <%@ page contentType="text/html;charset=UTF-8" %>
| <%@ page import="ml.festival.aviation.AuthManager" %>
| <%@ page import="javax.naming.InitialContext" %>
| <%@ page import="javax.naming.Context" %>
| <%@ page import="javax.sql.DataSource" %>
| <%@ page import="java.sql.Connection" %>
| <%@ page import="java.sql.PreparedStatement" %>
| <%@ page import="java.sql.ResultSet" %>
| <%@ page import="java.sql.Statement" %>
| 
| <%
|     AuthManager authManager = new AuthManager();
| 
|     if (!authManager.validate(String.valueOf(session.getAttribute("sid")))) {
|         response.sendRedirect("login.jsp");
|     } else {
|         ResultSet profile = authManager.getProfileDetails(String.valueOf(session.getAttribute("sid")));
| 
|         if (!profile.next() || !profile.getBoolean("isAdmin")) {
|             response.sendRedirect("login.jsp");
|             return;
|         }
|     }
| 
|     authManager.closeConnection();
| 
|     InitialContext initialContext;
|     Context environmentContext;
|     DataSource dataSource;
|     Connection conn = null;
| 
|     ResultSet questions = null;
| 
|     boolean success = false;
|     boolean dataError = false;
|     boolean error = false;
| 
|     try {
|         initialContext = new InitialContext();
|         environmentContext = (Context)initialContext.lookup("java:/comp/env");
|         dataSource = (DataSource)environmentContext.lookup("jdbc/aviation");
|         conn = dataSource.getConnection();
| 
|         request.setCharacterEncoding("UTF-8");
| 
|         if ("POST".equals(request.getMethod())) {
|             String method = request.getParameter("method");
|             String id = request.getParameter("id");
| 
|             if ("update".equals(method)) {
|                 PreparedStatement p = conn.prepareStatement("UPDATE questions SET questionText = ?, answerText = ? WHERE linkId = ?");
| 
|                 p.setString(1, request.getParameter("question"));
|                 p.setString(2, request.getParameter("answer"));
|                 p.setString(3, id);
| 
|                 p.execute();
|             } else if ("delete".equals(method)) {
|                 PreparedStatement p = conn.prepareStatement("DELETE FROM questions WHERE linkId = ?");
| 
|                 p.setString(1, id);
| 
|                 p.execute();
|             } else if ("insert".equals(method)) {
|                 PreparedStatement p = conn.prepareStatement("INSERT INTO questions VALUES (?, ?, ?)");
| 
|                 p.setString(1, id);
|                 p.setString(2, request.getParameter("question"));
|                 p.setString(3, request.getParameter("answer"));
| 
|                 p.execute();
|             }
| 
|             success = true;
|         }
| 
|     } catch (Exception e) {
|         dataError = true;
|         e.printStackTrace();
|     }
| 
|     try {
|         Statement statement = conn.createStatement();
|         questions = statement.executeQuery("SELECT * FROM questions ORDER BY questionText ASC");
|     } catch (Exception e) {
|         error = true;
|         e.printStackTrace();
|     }
| %>

doctype html
html
	head
		meta(charset="utf-8")
		meta(name="viewport", content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no")
	
		title Support Center Admin Panel – FESTIVAL Aviation Support
		
		link(rel="stylesheet", href="css/aviation.css")
		link(rel="stylesheet", href="css/support-center.built.css")
	body
		include _nav
		
		include _sc-modal
		
		.content-wrapper
			section.support
				.section-content
					h2 Fragen

					| 
					| <%
					|     if (success) {
					| %>

					article(class="flag success")
						div(class="header")
							div(class="icon")
								span
									span(class="ai ai-success")
							span(class="title") Aktion erfolgreich
						div(class="content")
							p Die Aktion wurde erfolgreich durchgeführt.

					| 
					| <%
					|     }
					| 
					|     if (dataError) {
					| %>

					article(class="flag error")
						div(class="header")
							div(class="icon")
								span
									span(class="ai ai-error")
							span(class="title") Hier funktioniert etwas nicht
						div(class="content")
							p Beim Durchführen der Aktion ist ein Fehler aufgetreten. Bitte versuch es später noch einmal.

					| 
					| <%
					|     }
					| 
					|     if (error) {
					| %>

					article(class="flag error")
						div(class="header")
							div(class="icon")
								span
									span(class="ai ai-error")
							span(class="title") Hier funktioniert etwas nicht
						div(class="content")
							p Es scheint als hätten wir Probleme im Hintergrund, sodass aktuell keine Fragen geladen werden können. Bitte versuch es später noch einmal.

					| 
					| <%
					|     }
					| 
					|     if (!error) {
					| %>

					article(class="flag info")
						div(class="header")
							div(class="icon")
								span
									span(class="ai ai-info")
							span(class="title") Information zu Fragen
						div(class="content")
							p Jede Frage hat eine eindeutige Id. Diese darf nicht für andere Fragen verwendet werden und kann später nicht geändert werden. Die Id darf nur aus Kleinbuchstaben, Zahlen und Bindestrichen bestehen.
						
					table.editor
						tr
							th
								kbd linkId
							th
								kbd questionText
							th
								kbd answerText
							th Aktionen

						| 
						| <%
						|      while (questions.next()) {
						| %>

						tr
							td
								kbd <%= questions.getString("linkId") %>
							td
								input(type="text", data-q-question!='<%= questions.getString(\"linkId\") %>', value!='<%= questions.getString(\"questionText\") %>')
							td
								input(type="text", data-q-answer!='<%= questions.getString(\"linkId\") %>', value!='<%= questions.getString(\"answerText\") %>')
							td
								button.icon.success.update(data-q-id!="<%= questions.getString(\"linkId\") %>").modal-trigger(data-modal-type="question", data-modal-title="Frage aktualisieren?", data-modal-text="Möchtest du die Frage aktualisieren?", data-modal-primary="Frage aktualisieren", data-modal-primary-action="submit")
									span.ai.ai-check
								button.icon.error.delete(data-q-id!="<%= questions.getString(\"linkId\") %>").modal-trigger(data-modal-type="error", data-modal-title="Frage löschen?", data-modal-text="Möchtest du die Frage löschen?", data-modal-primary="Frage löschen", data-modal-primary-action="submit")
									span.ai.ai-delete

						| 
						| <%
						|     }
						| %>
						
						tr
							td
								input(type="text", id="new-question-id")
							td
								input(type="text", id="new-question-question")
							td
								input(type="text", id="new-question-answer")
							td
								button.icon.info.insert.modal-trigger(data-modal-type="question", data-modal-title="Frage hinzufügen?", data-modal-text="Möchtest du die Frage hinzufügen?", data-modal-primary="Frage hinzufügen", data-modal-primary-action="submit")
									span.ai.ai-plus

					| 
					| <%
					|     }
					| %>
		include _footer
		
	script(src="js/support-center.js")
	script(src="js/modal.js")
	script(src="js/icons.js")

| 
| <%
| 	if (conn != null)
| 	    conn.close();
| %>
