| <!--
| 	booking-services.jsp
| 	FESTIVAL Aviation
| 	
| 	This page shows a selection of services a user
| 	can add to his booked flight
| 	
| 	@author Janik Schmidt (jani.schmidt@ostfalia.de)
| 	@version 1.0
| -->
| 
| <%@ page contentType="text/html;charset=UTF-8" language="java" %>
| <%@ page import="ml.festival.aviation.SearchResultsDemo" %>
| <%@ page import="org.json.*" %>
| <%@ page import="java.time.*" %>
| <%@ page import="java.time.format.DateTimeFormatter"%>
| <%@ page import="java.sql.*" %>
| <%@ page import="java.util.Map" %>
| 
| <%
| 	JSONObject requestData = new JSONObject();
| 	JSONObject demoData = new JSONObject();
| 
| 	LocalDateTime depart_time = null;
| 	LocalDateTime arrv_time = null;
| 
| 	try {
| 		// FIX JAVA'S FUCKING TIMEZONE HANDLING!!!
| 		depart_time = Instant.parse(request.getParameter("depart_date")).atZone(ZoneId.of("Europe/Berlin")).toLocalDateTime();
| 		arrv_time = Instant.parse(request.getParameter("arrv_date")).atZone(ZoneId.of("Europe/Berlin")).toLocalDateTime();
| 
| 		// Map every request parameter into a JSON object
| 		Map<String, String[]> parameters = request.getParameterMap();
| 		for(String parameter : parameters.keySet()) {
| 			requestData.put(parameter, request.getParameter(parameter));
| 		}
| 
| 		demoData = SearchResultsDemo.getJSONData(requestData);
| 	} catch (Exception e) {
| 		e.printStackTrace();
| 	}
| %>
| 

doctype html
html
	head
		meta(charset="utf-8")
		meta(name="viewport", content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no")
	
		title Dienste – FESTIVAL Aviation
		
		link(rel="stylesheet",href="css/aviation.css")
		link(rel="stylesheet",href="css/booking.built.css")
	body
		include _nav
		
		section.search-results
			.section-content.row
				.progress-overview.column.medium-3
					p.progress-title Flug buchen
					p.progress-section-title Vorbereitung
					ul
						li(data-progress-made="true")
							| 
							| 
							span Reiseziel wählen
							.pipe
						li(data-progress-made="true")
							| 
							| 
							span Flug wählen
							.pipe
						li.current(data-progress-made="true")
							| 
							| 
							span Dienste wählen
							.pipe
					p.progress-section-title Bezahlung
					ul
						li(data-progress-made="false")
							| 
							| 
							span Rechnungsadresse
							.pipe
						li(data-progress-made="false")
							| 
							| 
							span Buchung abschließen
							.pipe
				.search-results-container.column.column-12.medium-8
					.search-results-header
						.row
							.column.column-12.medium-6
								.column-title
									img(src="img/icon-departure.svg")
									p Von
								p.column-content <%= demoData.getString("departureName") %>
							.column.column-12.medium-6
								.column-title
									img(src="img/icon-arrival.svg")
									p Nach
								p.column-content <%= demoData.getString("arrivalName") %>
						.row
							.column.column-12.medium-6(data-key="date")
								.column-title
									img(src="img/icon-date.svg")
									p Abflugdatum
								p.column-content <%= ((LocalDate)demoData.get("departureDate")).format(DateTimeFormatter.ofPattern("EEEE, dd. MMMM yyyy")) %>
							.column.column-12.medium-2
								.column-title
									img(src="img/icon-passenger.svg")
									p Passagiere
								p.column-content <%= requestData.getString("passengers") %>
							.column.column-12.medium-4
								.column-title
									img(src="img/icon-class.svg")
									p Klasse
								p.column-content <%= requestData.getString("flight_class") %>
						.row.selected-flight
							.column.column-2
								.column-title
									p <%= demoData.getString("departureName") %>
								p.column-content <%= depart_time.format(DateTimeFormatter.ofPattern("HH:mm")) %>
							.column.column-2.align-right
								.column-title 
									p <%= demoData.getString("arrivalName") %>
								p.column-content <%= arrv_time.format(DateTimeFormatter.ofPattern("HH:mm")) %>
							.column.column-2.column-offset-1
								.column-title
									p Dauer
								| 
								| <%
								| 	// Parse the passed duration in millis into a Duration object
								| 	Duration duration = Duration.ofMillis(requestData.getInt("duration"));
								| %>
								p.column-content <%= String.format("%02dh %02dmin", duration.getSeconds() / 3600, (duration.getSeconds() % 3600) / 60) %>
							.column.column-1
								.column-title
									p Stopps
								p.column-content <%= requestData.getString("stops") %>
							.column.column-auto
								.column-title
									p Flugnummer
								p.column-content <%= requestData.getString("flight_number") %>
							.column.column-2.align-right
								.column-title
									p Preis
								p.column-content ab <%= requestData.getString("price") %>€
					.scroll-container
						.result-header
							h4.date
								span Dienste
							p Im Ticketpreis bereits enthalten ist eine Beteiligung an den Betriebskosten des jeweiligen Fluges. Um Tickets so günstig anbieten zu können, werden zusätzliche Dienste, wie etwa die Mitnahme von Gepäck, extra angeboten. So zahlst du wirklich nur für das, was du brauchst. Solltest du unerwartet einen Dienst in Anspruch nehmen müssen, mach dir keine Sorgen. Gebühren können auch nach der Reise bezahlt werden.
						
						.results
							| 
							| <%
							| 	// Print the services we got from the database
							| 	JSONArray serviceData = SearchResultsDemo.getServiceData();
							| 	for (int i=0; i<serviceData.length(); i++) {
							| %>
							.result-cell.no-arrow.row(data-service-id!="<%= serviceData.getJSONObject(i).getString(\"serviceId\") %>")
								.column.column-6
									p <%= serviceData.getJSONObject(i).getString("title") %>
								.column.column-6.align-right
									p <%= serviceData.getJSONObject(i).getString("price") %>€
							| 
							| <%
							| 	}
							| %>
					.fill-background
					.results-footer
						button.outline.blue(onclick="window.history.back()") Zurück
						button.fill.blue.continue-button(onclick="document.forms[\"selectedItem\"].submit()") Fortfahren
		form.hidden(action="booking-billing.jsp", method="POST", name="selectedItem")
			| <%
			| 	// Create input fields for every request parameter
			| 	Map<String, String[]> parameters = request.getParameterMap();
			| 	for(String parameter : parameters.keySet()) {
			| %>
			input(name!="<%= parameter %>", value!="<%= request.getParameter(parameter) %>")
			| 
			| <%
			| 	}
			| %>
			
			input(name="services")
		script(type="text/javascript",src="js/flight-search.js")